/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package resources.views;

import resources.components.ScrollBarCustom;
import resources.components.chart.ModelChart;
import app.Controllers.ReportController;
import app.Enums.ExportFiles;
import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlosvargas
 */
public class ReportsPanel extends javax.swing.JPanel {

    protected DefaultTableModel model;

    /**
     * Creates new form ReportsPanel
     */
    public ReportsPanel() {
        initComponents();

        model = (DefaultTableModel) jTableDataReport.getModel();

        ScrollBarCustom verticalScrollBar = new ScrollBarCustom();
        verticalScrollBar.setForeground(new Color(130, 130, 130, 100));
        jScrollTablePanel.setVerticalScrollBar(verticalScrollBar);

        chart.addLegend("Laptop", new Color(12, 84, 175), new Color(0, 108, 247));
        chart.addLegend("Proyector", new Color(54, 4, 143), new Color(104, 49, 200));
        chart.addLegend("Impresora", new Color(5, 125, 0), new Color(95, 209, 69));
        chart.addLegend("Computadora de escritorio", new Color(186, 37, 37), new Color(241, 100, 120));
        chart.addData(new ModelChart("Enero", new double[]{500, 200, 80, 89}));
        chart.addData(new ModelChart("Febrero", new double[]{600, 750, 90, 150}));
        chart.addData(new ModelChart("Marzo", new double[]{200, 350, 460, 900}));
        chart.addData(new ModelChart("Abril", new double[]{480, 150, 750, 700}));
        chart.addData(new ModelChart("Mayo", new double[]{350, 540, 300, 150}));
        chart.addData(new ModelChart("Junio", new double[]{190, 280, 81, 200}));
        chart.start();

        lineChart.addLegend("Laptop", new Color(12, 84, 175), new Color(0, 108, 247));
        lineChart.addLegend("Proyector", new Color(54, 4, 143), new Color(104, 49, 200));
        lineChart.addLegend("Impresora", new Color(5, 125, 0), new Color(95, 209, 69));
        lineChart.addLegend("Computadora de escritorio", new Color(186, 37, 37), new Color(241, 100, 120));
        lineChart.addData(new ModelChart("Enero", new double[]{500, 200, 80, 89}));
        lineChart.addData(new ModelChart("Febrero", new double[]{600, 750, 90, 150}));
        lineChart.addData(new ModelChart("Marzo", new double[]{200, 350, 460, 900}));
        lineChart.addData(new ModelChart("Abril", new double[]{480, 150, 750, 700}));
        lineChart.addData(new ModelChart("Mayo", new double[]{350, 540, 300, 150}));
        lineChart.addData(new ModelChart("Junio", new double[]{190, 280, 81, 200}));
        lineChart.start();

        this.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        fillTable(ReportController.index());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlabelTitle = new javax.swing.JLabel();
        panelShadow1 = new resources.components.PanelShadow();
        chart = new resources.components.chart.Chart();
        panelShadow2 = new resources.components.PanelShadow();
        lineChart = new resources.components.chart.LineChart();
        TablePanel = new resources.components.PanelShadow();
        jScrollTablePanel = new javax.swing.JScrollPane();
        jTableDataReport = new javax.swing.JTable();
        ExportExcel = new javax.swing.JLabel();
        ExportPDF = new javax.swing.JLabel();
        ExportWord = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1271, 738));

        jlabelTitle.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jlabelTitle.setText("REPORTES");

        javax.swing.GroupLayout panelShadow1Layout = new javax.swing.GroupLayout(panelShadow1);
        panelShadow1.setLayout(panelShadow1Layout);
        panelShadow1Layout.setHorizontalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(chart, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        panelShadow1Layout.setVerticalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelShadow2Layout = new javax.swing.GroupLayout(panelShadow2);
        panelShadow2.setLayout(panelShadow2Layout);
        panelShadow2Layout.setHorizontalGroup(
            panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lineChart, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        panelShadow2Layout.setVerticalGroup(
            panelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(lineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jScrollTablePanel.setBorder(null);
        jScrollTablePanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTableDataReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Inventario", "Tipo de Equipo", "Cantidad de Mantenimientos", "Proximo Mantenimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDataReport.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableDataReport.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableDataReport.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTableDataReport.setGridColor(java.awt.Color.white);
        jTableDataReport.setRowHeight(56);
        jTableDataReport.setSelectionBackground(java.awt.Color.white);
        jTableDataReport.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableDataReport.setShowGrid(true);
        jTableDataReport.setShowVerticalLines(false);
        jTableDataReport.getTableHeader().setReorderingAllowed(false);
        jScrollTablePanel.setViewportView(jTableDataReport);
        jTableDataReport.getTableHeader().setPreferredSize(new java.awt.Dimension(jTableDataReport.getColumnModel().getTotalColumnWidth(), 56));

        javax.swing.table.JTableHeader header = jTableDataReport.getTableHeader();
        header.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(220,220,220))); // Establecer solo el borde inferior
        header.setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                component.setBackground(java.awt.Color.WHITE); // Establecer el color de fondo en blanco
                component.setFont(component.getFont().deriveFont(java.awt.Font.BOLD));

                return component;
            }
        });

        jTableDataReport.setTableHeader(header);

        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                // Crea un JLabel personalizado
                javax.swing.JLabel label = new javax.swing.JLabel();

                if (isSelected) {
                    component.setBackground(new java.awt.Color(220, 220, 220)); // Cambia el color de fondo de selecci√≥n a gris
                } else {
                    component.setBackground(java.awt.Color.WHITE); // Establece el color de fondo predeterminado en blanco
                }

                component.setForeground(java.awt.Color.BLACK);

                return component;
            }
        };

        jTableDataReport.setDefaultRenderer(Object.class, cellRenderer);
        jTableDataReport.setSelectionBackground(new java.awt.Color(220,220,220));

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollTablePanel)
                .addGap(16, 16, 16))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        ExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/ExportExcelBtn.png"))); // NOI18N
        ExportExcel.setToolTipText("Exportar a EXCEL");
        ExportExcel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExportExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExportExcelMouseClicked(evt);
            }
        });

        ExportPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/ExportPDFBtn.png"))); // NOI18N
        ExportPDF.setToolTipText("Exportar a PDF");
        ExportPDF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExportPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExportPDFMouseClicked(evt);
            }
        });

        ExportWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/ExportWordBtn.png"))); // NOI18N
        ExportWord.setToolTipText("Exportar a WORD");
        ExportWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExportWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExportWordMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelShadow2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(TablePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jlabelTitle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExportWord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ExportExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExportPDF)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jlabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelShadow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelShadow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExportExcel)
                    .addComponent(ExportPDF)
                    .addComponent(ExportWord))
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {panelShadow1, panelShadow2});

    }// </editor-fold>//GEN-END:initComponents

    private void ExportPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportPDFMouseClicked
        ReportController.general(model, ExportFiles.PDF);
    }//GEN-LAST:event_ExportPDFMouseClicked

    private void ExportExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportExcelMouseClicked
        ReportController.general(model, ExportFiles.EXCEL);
    }//GEN-LAST:event_ExportExcelMouseClicked

    private void ExportWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportWordMouseClicked
        ReportController.general(model, ExportFiles.WORD);
    }//GEN-LAST:event_ExportWordMouseClicked

    private void fillTable(Object[][] data) {
        if (data != null) {
            model.setRowCount(0);

            for (Object[] item : data) {
                model.addRow(item);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ExportExcel;
    private javax.swing.JLabel ExportPDF;
    private javax.swing.JLabel ExportWord;
    private resources.components.PanelShadow TablePanel;
    private resources.components.chart.Chart chart;
    private javax.swing.JScrollPane jScrollTablePanel;
    private javax.swing.JTable jTableDataReport;
    private javax.swing.JLabel jlabelTitle;
    private resources.components.chart.LineChart lineChart;
    private resources.components.PanelShadow panelShadow1;
    private resources.components.PanelShadow panelShadow2;
    // End of variables declaration//GEN-END:variables
}
