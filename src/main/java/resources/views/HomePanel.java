/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package resources.views;

import resources.components.ScrollBarCustom;
import resources.components.chart.ModelChart;
import app.Controllers.EquipmentController;
import app.Enums.StateEnum;
import app.Models.Equipment;
import app.Models.State;
import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlosvargas
 */
public class HomePanel extends javax.swing.JPanel {

    protected String _BASEDIR = System.getProperty("user.dir");
    protected String _ICONS_PATH = _BASEDIR + "/src/main/java/resources/icons/";
    protected String _IMAGE_PATH = _BASEDIR + "/src/main/java/resources/images/";

    protected DefaultTableModel model;

    public HomePanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerPanel = new javax.swing.JPanel();
        jPanelHeader = new javax.swing.JPanel();
        jlabelTitle = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        NotificationsBtn = new resources.components.ButtonBadges();
        CircularPanelShadow = new resources.components.PanelShadow();
        jLabel5 = new javax.swing.JLabel();
        ProgressPanelContainer1 = new javax.swing.JPanel();
        jLabelState1 = new javax.swing.JLabel();
        StateProgress1 = new resources.components.Progress();
        ProgressPanelContainer2 = new javax.swing.JPanel();
        jLabelState2 = new javax.swing.JLabel();
        StateProgress2 = new resources.components.Progress();
        ProgressPanelContainer3 = new javax.swing.JPanel();
        jLabelState3 = new javax.swing.JLabel();
        StateProgress3 = new resources.components.Progress();
        LinePanelShadow = new resources.components.PanelShadow();
        lineChart = new resources.components.chart.LineChart();
        TablePanel = new resources.components.PanelShadow();
        jScrollTablePanel = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        jPanelFooter = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDataCount = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(1271, 738));

        ContainerPanel.setBackground(java.awt.Color.white);

        jPanelHeader.setBackground(new java.awt.Color(255, 255, 255));

        jlabelTitle.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jlabelTitle.setText("INICIO");

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });

        NotificationsBtn.setBackground(new java.awt.Color(36, 104, 155));
        NotificationsBtn.setForeground(new java.awt.Color(49, 62, 74));
        NotificationsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/NotificationIcon.png"))); // NOI18N
        NotificationsBtn.setBadges(5);
        NotificationsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotificationsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jlabelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 769, Short.MAX_VALUE)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NotificationsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(NotificationsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jlabelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel5.setText("Estado de los Equipos");
        jLabel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        ProgressPanelContainer1.setOpaque(false);

        jLabelState1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelState1.setText("En Buen Estado");

        StateProgress1.setBackground(java.awt.Color.white);
        StateProgress1.setForeground(new java.awt.Color(34, 197, 94));

        javax.swing.GroupLayout ProgressPanelContainer1Layout = new javax.swing.GroupLayout(ProgressPanelContainer1);
        ProgressPanelContainer1.setLayout(ProgressPanelContainer1Layout);
        ProgressPanelContainer1Layout.setHorizontalGroup(
            ProgressPanelContainer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelState1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ProgressPanelContainer1Layout.createSequentialGroup()
                .addComponent(StateProgress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ProgressPanelContainer1Layout.setVerticalGroup(
            ProgressPanelContainer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProgressPanelContainer1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelState1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StateProgress1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProgressPanelContainer2.setOpaque(false);

        jLabelState2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelState2.setText("En Mantenimiento");

        StateProgress2.setBackground(java.awt.Color.white);
        StateProgress2.setForeground(new java.awt.Color(245, 158, 11));

        javax.swing.GroupLayout ProgressPanelContainer2Layout = new javax.swing.GroupLayout(ProgressPanelContainer2);
        ProgressPanelContainer2.setLayout(ProgressPanelContainer2Layout);
        ProgressPanelContainer2Layout.setHorizontalGroup(
            ProgressPanelContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelState2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProgressPanelContainer2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(StateProgress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ProgressPanelContainer2Layout.setVerticalGroup(
            ProgressPanelContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProgressPanelContainer2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelState2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StateProgress2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProgressPanelContainer3.setOpaque(false);

        jLabelState3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelState3.setText("Da√±ados");

        StateProgress3.setBackground(java.awt.Color.white);
        StateProgress3.setForeground(new java.awt.Color(244, 63, 94));

        javax.swing.GroupLayout ProgressPanelContainer3Layout = new javax.swing.GroupLayout(ProgressPanelContainer3);
        ProgressPanelContainer3.setLayout(ProgressPanelContainer3Layout);
        ProgressPanelContainer3Layout.setHorizontalGroup(
            ProgressPanelContainer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelState3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(StateProgress3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ProgressPanelContainer3Layout.setVerticalGroup(
            ProgressPanelContainer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProgressPanelContainer3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelState3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StateProgress3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CircularPanelShadowLayout = new javax.swing.GroupLayout(CircularPanelShadow);
        CircularPanelShadow.setLayout(CircularPanelShadowLayout);
        CircularPanelShadowLayout.setHorizontalGroup(
            CircularPanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CircularPanelShadowLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(CircularPanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CircularPanelShadowLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(CircularPanelShadowLayout.createSequentialGroup()
                        .addComponent(ProgressPanelContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(ProgressPanelContainer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(ProgressPanelContainer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        CircularPanelShadowLayout.setVerticalGroup(
            CircularPanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CircularPanelShadowLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addGap(37, 37, 37)
                .addGroup(CircularPanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProgressPanelContainer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgressPanelContainer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProgressPanelContainer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout LinePanelShadowLayout = new javax.swing.GroupLayout(LinePanelShadow);
        LinePanelShadow.setLayout(LinePanelShadowLayout);
        LinePanelShadowLayout.setHorizontalGroup(
            LinePanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LinePanelShadowLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lineChart, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        LinePanelShadowLayout.setVerticalGroup(
            LinePanelShadowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LinePanelShadowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jScrollTablePanel.setBorder(null);
        jScrollTablePanel.setFocusable(false);

        jTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Codigo Inventario", "Tipo de Equipo", "Ultimo Mantenimiento", "Estado", "Proximo Mantenimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableData.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTableData.setGridColor(new java.awt.Color(255, 255, 255));
        jTableData.setRowHeight(56);
        jTableData.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jTableData.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableData.setShowGrid(true);
        jTableData.setShowVerticalLines(false);
        jTableData.getTableHeader().setReorderingAllowed(false);
        jScrollTablePanel.setViewportView(jTableData);
        jTableData.getTableHeader().setPreferredSize(new java.awt.Dimension(jTableData.getColumnModel().getTotalColumnWidth(), 56));

        javax.swing.table.JTableHeader header = jTableData.getTableHeader();
        header.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(220,220,220))); // Establecer solo el borde inferior
        header.setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                component.setBackground(java.awt.Color.WHITE); // Establecer el color de fondo en blanco
                component.setFont(component.getFont().deriveFont(java.awt.Font.BOLD));

                return component;
            }
        });

        jTableData.setTableHeader(header);

        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                // Crea un JLabel personalizado
                javax.swing.JLabel label = new javax.swing.JLabel();

                if (isSelected) {
                    component.setBackground(new java.awt.Color(220, 220, 220)); // Cambia el color de fondo de selecci√≥n a gris
                } else {
                    component.setBackground(new java.awt.Color(255,255,255)); // Establece el color de fondo predeterminado en blanco
                }

                component.setForeground(new java.awt.Color(0,0,0));

                if (isSelected && column == 4) {
                    component.setBackground(new java.awt.Color(220, 220, 220)); // Cambia el color de fondo de la columna 4 cuando se selecciona la fila completa
                    label.setBackground(new java.awt.Color(220, 220, 220)); //Cambia el color de fondo del label

                }

                if (column == 4) {
                    label.setOpaque(true); // Permite establecer el color de fondo en el JLabel
                    label.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Establece un margen interno para el JLabel

                    if (!isSelected) {
                        component.setBackground(java.awt.Color.WHITE);
                        label.setBackground(java.awt.Color.WHITE);
                    }

                    // Obt√©n el valor de la columna "Estado"
                    String estado = (String) value;

                    if (estado.equals("Bueno")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/SuccessBadge.png"));
                    } else if (estado.equals("Da√±ado")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/DangerBadge.png"));
                    } else if (estado.equals("En Mantenimiento")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/WarningBadge.png"));
                    } else {
                        component.setBackground(new java.awt.Color(255,255,255)); // Establece el color de fondo en el componente principal
                        label.setBackground(new java.awt.Color(255,255,255)); // Establece el color de fondo en el JLabel
                        label.setText(""); // Sin texto si no hay estado definido
                    }

                    return label;
                }

                return component;
            }
        };

        jTableData.setDefaultRenderer(Object.class, cellRenderer);
        jTableData.setSelectionBackground(new java.awt.Color(220,220,220));

        jTableData.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) { // Asegurarse de que no se est√© realizando un ajuste
                    int selectedRow = jTableData.getSelectedRow();
                    int selectedColumn = jTableData.getSelectedColumn();

                    if (selectedRow != -1 && selectedColumn == 0) { // Verificar que se haya seleccionado una fila y la columna de la casilla de verificaci√≥n
                        boolean selected = (boolean) jTableData.getValueAt(selectedRow, selectedColumn);

                        if (selected) {
                            // Deseleccionar las otras casillas de verificaci√≥n
                            for (int row = 0; row < jTableData.getRowCount(); row++) {
                                if (row != selectedRow) {
                                    jTableData.setValueAt(false, row, selectedColumn);
                                }
                            }
                        }
                    }
                }
            }
        });

        javax.swing.table.DefaultTableCellRenderer cellRendererColumn2 = new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                setForeground(java.awt.Color.BLACK);
                return component;
            }
        };

        jTableData.getColumnModel().getColumn(1).setCellRenderer(cellRendererColumn2);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollTablePanel)
                .addGap(16, 16, 16))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        jPanelFooter.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Cantidad de Resultados");

        jLabelDataCount.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabelDataCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDataCount.setText("0");
        jLabelDataCount.setAlignmentX(0.5F);
        jLabelDataCount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 220, 220)));

        javax.swing.GroupLayout jPanelFooterLayout = new javax.swing.GroupLayout(jPanelFooter);
        jPanelFooter.setLayout(jPanelFooterLayout);
        jPanelFooterLayout.setHorizontalGroup(
            jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFooterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDataCount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanelFooterLayout.setVerticalGroup(
            jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDataCount, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout ContainerPanelLayout = new javax.swing.GroupLayout(ContainerPanel);
        ContainerPanel.setLayout(ContainerPanelLayout);
        ContainerPanelLayout.setHorizontalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ContainerPanelLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelFooter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ContainerPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(ContainerPanelLayout.createSequentialGroup()
                                    .addComponent(CircularPanelShadow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(LinePanelShadow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(15, 15, 15)))
                    .addGap(12, 12, 12)))
        );
        ContainerPanelLayout.setVerticalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ContainerPanelLayout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LinePanelShadow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CircularPanelShadow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(9, 9, 9)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContainerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        model = (DefaultTableModel) jTableData.getModel();

        fillTable(EquipmentController.index());
        jLabelDataCount.setText(Integer.toString(Equipment.count()));

        ScrollBarCustom verticalScrollBar = new ScrollBarCustom();
        verticalScrollBar.setForeground(new Color(130, 130, 130, 100));
        jScrollTablePanel.setVerticalScrollBar(verticalScrollBar);

        StateProgress1.setValue(State.getPercentageByState(StateEnum.GOOD));
        StateProgress2.setValue(State.getPercentageByState(StateEnum.MAINTENANCE));
        StateProgress3.setValue(State.getPercentageByState(StateEnum.DAMAGED));

        lineChart.addLegend("Laptop", new Color(12, 84, 175), new Color(0, 108, 247));
        lineChart.addLegend("Proyector", new Color(54, 4, 143), new Color(104, 49, 200));
        lineChart.addLegend("Impresora", new Color(5, 125, 0), new Color(95, 209, 69));
        lineChart.addLegend("Computadora de escritorio", new Color(186, 37, 37), new Color(241, 100, 120));
        lineChart.addData(new ModelChart("Enero", new double[]{500, 200, 80, 89}));
        lineChart.addData(new ModelChart("Febrero", new double[]{600, 750, 90, 150}));
        lineChart.addData(new ModelChart("Marzo", new double[]{200, 350, 460, 900}));
        lineChart.addData(new ModelChart("Abril", new double[]{480, 150, 750, 700}));
        lineChart.addData(new ModelChart("Mayo", new double[]{350, 540, 300, 150}));
        lineChart.addData(new ModelChart("Junio", new double[]{190, 280, 81, 200}));
        lineChart.start();

        ContainerPanel.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        jPanelHeader.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        jPanelFooter.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        jTextFieldSearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Buscar");

    }

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        String searchText = jTextFieldSearch.getText();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fillTable(searchText.isEmpty() ? EquipmentController.index() : EquipmentController.show(searchText));
        }
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void NotificationsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotificationsBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NotificationsBtnActionPerformed

    private void fillTable(Object[][] data) {
        if (data != null) {
            model.setRowCount(0);

            for (Object[] item : data) {
                model.addRow(item);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private resources.components.PanelShadow CircularPanelShadow;
    private javax.swing.JPanel ContainerPanel;
    private resources.components.PanelShadow LinePanelShadow;
    private resources.components.ButtonBadges NotificationsBtn;
    private javax.swing.JPanel ProgressPanelContainer1;
    private javax.swing.JPanel ProgressPanelContainer2;
    private javax.swing.JPanel ProgressPanelContainer3;
    private resources.components.Progress StateProgress1;
    private resources.components.Progress StateProgress2;
    private resources.components.Progress StateProgress3;
    private resources.components.PanelShadow TablePanel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDataCount;
    private javax.swing.JLabel jLabelState1;
    private javax.swing.JLabel jLabelState2;
    private javax.swing.JLabel jLabelState3;
    private javax.swing.JPanel jPanelFooter;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JScrollPane jScrollTablePanel;
    private javax.swing.JTable jTableData;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JLabel jlabelTitle;
    private resources.components.chart.LineChart lineChart;
    // End of variables declaration//GEN-END:variables

}
