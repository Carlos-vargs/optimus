/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package resources.views;

import resources.components.ScrollBarCustom;
import app.Controllers.EquipmentController;
import app.Models.Equipment;
import app.Models.Component;
import app.Models.Maintenance;
import com.formdev.flatlaf.FlatClientProperties;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlosvargas
 */
public class EquipmentPanel extends javax.swing.JPanel {

    protected DefaultTableModel model;
    protected String _BASEDIR = System.getProperty("user.dir");
    protected String _ICONS_PATH = _BASEDIR + "/src/main/java/resources/icons/";
    protected String _IMAGE_PATH = _BASEDIR + "/src/main/java/resources/images/";

    /**
     * Creates new form EquipmentPanel
     */
    public EquipmentPanel() {
        initComponents();

        ScrollBarCustom verticalScrollBar = new ScrollBarCustom();
        verticalScrollBar.setForeground(new Color(130, 130, 130, 100));

        jScrollTablePanel.setVerticalScrollBar(verticalScrollBar);
        model = (DefaultTableModel) jTableData.getModel();

        jLabelEquipmentCount.setText(Integer.toString(Equipment.count()));
        jLabelComponentsCount.setText(Integer.toString(Component.count()));
        jLabelMaintenanceCount.setText(Integer.toString(Maintenance.count()));

        ButtonHoverEffect(BtnNewRegister, _IMAGE_PATH + "NewRegisterBtn.png", _IMAGE_PATH + "NewRegisterActiveBtn.png");

        pagination.addEventPagination((int page) -> {
            pagination(page);
        });

        pagination(1);

        jTableData.getColumnModel().getColumn(1).sizeWidthToFit();
        jPanelHeader.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        this.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        ContainerPanel.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        jPanel3.putClientProperty(FlatClientProperties.STYLE, ""
                + "background:$App.default.background;");

        jTextFieldSearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Buscar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerPanel = new javax.swing.JPanel();
        jPanelHeader = new javax.swing.JPanel();
        jlabelTitle1 = new javax.swing.JLabel();
        BtnNewRegister = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jLabelBtnDeleteRow = new javax.swing.JLabel();
        jLabelBtnEdit = new javax.swing.JLabel();
        EquipmentCountPanel = new resources.components.PanelShadow();
        jLabel1 = new javax.swing.JLabel();
        jLabelEquipmentCount = new javax.swing.JLabel();
        ComponentsCountPanel = new resources.components.PanelShadow();
        jLabel2 = new javax.swing.JLabel();
        jLabelComponentsCount = new javax.swing.JLabel();
        MaintenanceCountPanel = new resources.components.PanelShadow();
        jLabel3 = new javax.swing.JLabel();
        jLabelMaintenanceCount = new javax.swing.JLabel();
        TablePanel = new resources.components.PanelShadow();
        jScrollTablePanel = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        pagination = new resources.components.pagination.Pagination();
        jComboBoxLimitPerPage = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabelShowingResults = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(1271, 738));
        setPreferredSize(new java.awt.Dimension(1271, 738));

        ContainerPanel.setBackground(new java.awt.Color(255, 255, 255));
        ContainerPanel.setMinimumSize(new java.awt.Dimension(1251, 732));
        ContainerPanel.setPreferredSize(new java.awt.Dimension(1251, 732));

        jPanelHeader.setBackground(new java.awt.Color(255, 255, 255));

        jlabelTitle1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jlabelTitle1.setText("EQUIPOS");

        BtnNewRegister.setBackground(new java.awt.Color(255, 255, 255));
        BtnNewRegister.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/NewRegisterBtn.png"))); // NOI18N
        BtnNewRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnNewRegisterMouseClicked(evt);
            }
        });

        jTextFieldSearch.setMaximumSize(new java.awt.Dimension(250, 2147483647));
        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(250, 24));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(250, 24));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });

        jLabelBtnDeleteRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/DeleteBtn.png"))); // NOI18N
        jLabelBtnDeleteRow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBtnDeleteRow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBtnDeleteRowMouseClicked(evt);
            }
        });

        jLabelBtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/EditBtn.png"))); // NOI18N
        jLabelBtnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelBtnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBtnEditMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHeaderLayout.createSequentialGroup()
                        .addComponent(jlabelTitle1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelHeaderLayout.createSequentialGroup()
                        .addComponent(BtnNewRegister)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelBtnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelBtnDeleteRow)
                        .addGap(16, 16, 16))))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addComponent(jlabelTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnNewRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBtnDeleteRow)
                    .addComponent(jLabelBtnEdit)))
        );

        EquipmentCountPanel.setMinimumSize(new java.awt.Dimension(391, 132));
        EquipmentCountPanel.setPreferredSize(new java.awt.Dimension(391, 132));

        jLabel1.setText("Total de Equipos");

        jLabelEquipmentCount.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabelEquipmentCount.setText("0");

        javax.swing.GroupLayout EquipmentCountPanelLayout = new javax.swing.GroupLayout(EquipmentCountPanel);
        EquipmentCountPanel.setLayout(EquipmentCountPanelLayout);
        EquipmentCountPanelLayout.setHorizontalGroup(
            EquipmentCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EquipmentCountPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(EquipmentCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelEquipmentCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        EquipmentCountPanelLayout.setVerticalGroup(
            EquipmentCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EquipmentCountPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabelEquipmentCount)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        ComponentsCountPanel.setMinimumSize(new java.awt.Dimension(391, 132));
        ComponentsCountPanel.setPreferredSize(new java.awt.Dimension(391, 132));

        jLabel2.setText("Total de Componentes");

        jLabelComponentsCount.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabelComponentsCount.setText("0");

        javax.swing.GroupLayout ComponentsCountPanelLayout = new javax.swing.GroupLayout(ComponentsCountPanel);
        ComponentsCountPanel.setLayout(ComponentsCountPanelLayout);
        ComponentsCountPanelLayout.setHorizontalGroup(
            ComponentsCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComponentsCountPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(ComponentsCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelComponentsCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ComponentsCountPanelLayout.setVerticalGroup(
            ComponentsCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComponentsCountPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabelComponentsCount)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        MaintenanceCountPanel.setMinimumSize(new java.awt.Dimension(391, 132));
        MaintenanceCountPanel.setPreferredSize(new java.awt.Dimension(391, 132));

        jLabel3.setText("Total de Matenimientos");

        jLabelMaintenanceCount.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabelMaintenanceCount.setText("0");

        javax.swing.GroupLayout MaintenanceCountPanelLayout = new javax.swing.GroupLayout(MaintenanceCountPanel);
        MaintenanceCountPanel.setLayout(MaintenanceCountPanelLayout);
        MaintenanceCountPanelLayout.setHorizontalGroup(
            MaintenanceCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MaintenanceCountPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(MaintenanceCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMaintenanceCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MaintenanceCountPanelLayout.setVerticalGroup(
            MaintenanceCountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MaintenanceCountPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabelMaintenanceCount)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        TablePanel.setPreferredSize(new java.awt.Dimension(491, 184));

        jScrollTablePanel.setBorder(null);
        jScrollTablePanel.setColumnHeaderView(jPanelHeader);

        jTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Codigo Inventario", "Tipo de Equipo", "Ultimo Mantenimiento", "Estado", "Proximo Mantenimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableData.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTableData.setGridColor(java.awt.Color.white);
        jTableData.setRowHeight(56);
        jTableData.setSelectionBackground(java.awt.Color.white);
        jTableData.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableData.setShowGrid(true);
        jTableData.setShowVerticalLines(false);
        jTableData.getTableHeader().setReorderingAllowed(false);
        jTableData.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableDataPropertyChange(evt);
            }
        });
        jScrollTablePanel.setViewportView(jTableData);
        jTableData.getTableHeader().setPreferredSize(new java.awt.Dimension(jTableData.getColumnModel().getTotalColumnWidth(), 56));

        javax.swing.table.JTableHeader header = jTableData.getTableHeader();
        header.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(220,220,220))); // Establecer solo el borde inferior
        header.setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                component.setBackground(java.awt.Color.WHITE); // Establecer el color de fondo en blanco
                component.setFont(component.getFont().deriveFont(java.awt.Font.BOLD));

                return component;
            }
        });

        jTableData.setTableHeader(header);

        javax.swing.table.DefaultTableCellRenderer cellRenderer = new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                // Crea un JLabel personalizado
                javax.swing.JLabel label = new javax.swing.JLabel();

                if (isSelected) {
                    component.setBackground(new java.awt.Color(220, 220, 220)); // Cambia el color de fondo de selección a gris
                } else {
                    component.setBackground(java.awt.Color.WHITE); // Establece el color de fondo predeterminado en blanco
                }

                component.setForeground(java.awt.Color.BLACK);

                if (isSelected && column == 4) {
                    component.setBackground(new java.awt.Color(220, 220, 220)); // Cambia el color de fondo de la columna 4 cuando se selecciona la fila completa
                    label.setBackground(new java.awt.Color(220, 220, 220)); //Cambia el color de fondo del label

                }

                if (column == 4) {
                    label.setOpaque(true); // Permite establecer el color de fondo en el JLabel
                    label.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)); // Establece un margen interno para el JLabel

                    if (!isSelected) {
                        component.setBackground(java.awt.Color.WHITE);
                        label.setBackground(java.awt.Color.WHITE);
                    }

                    // Obtén el valor de la columna "Estado"
                    String estado = (String) value;

                    if (estado.equals("Bueno")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/SuccessBadge.png"));
                    } else if (estado.equals("Dañado")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/DangerBadge.png"));
                    } else if (estado.equals("En Mantenimiento")) {
                        label.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") + "/src/main/java/resources/images/WarningBadge.png"));
                    } else {
                        component.setBackground(java.awt.Color.WHITE); // Establece el color de fondo en el componente principal
                        label.setBackground(java.awt.Color.WHITE); // Establece el color de fondo en el JLabel
                        label.setText(""); // Sin texto si no hay estado definido
                    }

                    return label;
                }

                setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

                return component;
            }
        };

        jTableData.setDefaultRenderer(Object.class, cellRenderer);
        jTableData.setSelectionBackground(new java.awt.Color(220,220,220));

        jTableData.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) { // Asegurarse de que no se esté realizando un ajuste
                    int selectedRow = jTableData.getSelectedRow();
                    int selectedColumn = jTableData.getSelectedColumn();

                    if (selectedRow != -1 && selectedColumn == 0) { // Verificar que se haya seleccionado una fila y la columna de la casilla de verificación
                        boolean selected = (boolean) jTableData.getValueAt(selectedRow, selectedColumn);

                        if (selected) {
                            // Deseleccionar las otras casillas de verificación
                            for (int row = 0; row < jTableData.getRowCount(); row++) {
                                if (row != selectedRow) {
                                    jTableData.setValueAt(false, row, selectedColumn);
                                }
                            }
                        }
                    }
                }
            }
        });

        javax.swing.table.DefaultTableCellRenderer cellRendererColumn2 = new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                java.awt.Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                setForeground(java.awt.Color.BLACK);
                return component;
            }
        };

        jTableData.getColumnModel().getColumn(1).setCellRenderer(cellRendererColumn2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(220, 220, 220)));

        pagination.setOpaque(false);

        jComboBoxLimitPerPage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15", "25", "50", "Todos" }));
        jComboBoxLimitPerPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxLimitPerPage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxLimitPerPageItemStateChanged(evt);
            }
        });

        jLabel4.setText("Por pagina");

        jLabelShowingResults.setText("Mostrando de 0 a 0 de 00 resultados");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelShowingResults)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jComboBoxLimitPerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(pagination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxLimitPerPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabelShowingResults))
                    .addComponent(pagination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollTablePanel))
                .addGap(16, 16, 16))
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablePanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout ContainerPanelLayout = new javax.swing.GroupLayout(ContainerPanel);
        ContainerPanel.setLayout(ContainerPanelLayout);
        ContainerPanelLayout.setHorizontalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ContainerPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1239, Short.MAX_VALUE)
                            .addGroup(ContainerPanelLayout.createSequentialGroup()
                                .addComponent(EquipmentCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(ComponentsCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(MaintenanceCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        ContainerPanelLayout.setVerticalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(EquipmentCountPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComponentsCountPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaintenanceCountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1259, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pagination(int page) {
        fillTable(EquipmentController.index(page, pagination, jLabelShowingResults, jComboBoxLimitPerPage));
    }

    private void showPanel(JPanel panel) {
        panel.setSize(ContainerPanel.getSize());
        panel.setLocation(0, 0);

        ContainerPanel.removeAll();
        ContainerPanel.setLayout(new BorderLayout());
        ContainerPanel.add(panel, BorderLayout.CENTER);
        ContainerPanel.revalidate();
        ContainerPanel.repaint();
    }

    private void BtnNewRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNewRegisterMouseClicked
        showPanel(EquipmentController.create());
    }//GEN-LAST:event_BtnNewRegisterMouseClicked

    private void fillTable(Object[][] data) {
        if (data != null) {
            model.setRowCount(0);

            for (Object[] item : data) {
                model.addRow(item);
            }
        }
    }

    private void jLabelBtnDeleteRowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBtnDeleteRowMouseClicked

        if (jTableData.getRowCount() > 0 && jTableData.getSelectedRow() != -1) {
            int selectedRow = jTableData.getSelectedRow();
            boolean selected = (boolean) jTableData.getValueAt(selectedRow, 0);

            if (selected) {
                //String nInventario = jTableData.getValueAt(selectedRow, 1).toString();

                model.removeRow(selectedRow);
                jLabelBtnDeleteRow.setIcon(new ImageIcon(_IMAGE_PATH + "deleteBtn.png"));
                jLabelEquipmentCount.setText(Integer.toString(model.getRowCount()));
            }
        }
    }//GEN-LAST:event_jLabelBtnDeleteRowMouseClicked

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        String searchText = jTextFieldSearch.getText();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fillTable(searchText.isEmpty() ? EquipmentController.index() : EquipmentController.show(searchText));
        }
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void jTableDataPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableDataPropertyChange

        if (jTableData.getEditingRow() != -1) {
            int selectedRow = jTableData.getSelectedRow();
            boolean selected = (boolean) jTableData.getValueAt(selectedRow, 0);

            if (selected) {
                jLabelBtnDeleteRow.setIcon(new ImageIcon(_IMAGE_PATH + "DeleteActiveBtn.png"));
                jLabelBtnEdit.setIcon(new ImageIcon(_IMAGE_PATH + "EditActiveBtn.png"));

            } else {
                jLabelBtnDeleteRow.setIcon(new ImageIcon(_IMAGE_PATH + "DeleteBtn.png"));
                jLabelBtnEdit.setIcon(new ImageIcon(_IMAGE_PATH + "EditBtn.png"));

            }
        }
    }//GEN-LAST:event_jTableDataPropertyChange

    private void jLabelBtnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBtnEditMouseClicked
        if (jTableData.getRowCount() > 0 && jTableData.getSelectedRow() != -1) {
            int selectedRow = jTableData.getSelectedRow();
            boolean selected = (boolean) jTableData.getValueAt(selectedRow, 0);

            if (selected) {
                jLabelBtnEdit.setIcon(new ImageIcon(_IMAGE_PATH + "EditBtn.png"));
                jLabelEquipmentCount.setText(Integer.toString(model.getRowCount()));
            }
        }
    }//GEN-LAST:event_jLabelBtnEditMouseClicked

    private void jComboBoxLimitPerPageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxLimitPerPageItemStateChanged
        pagination(1);
    }//GEN-LAST:event_jComboBoxLimitPerPageItemStateChanged

    private void ButtonHoverEffect(JLabel button, String defaultIconPath, String activeIconPath) {
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setIcon(new ImageIcon(activeIconPath));
                button.setCursor(new Cursor(Cursor.HAND_CURSOR));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setIcon(new ImageIcon(defaultIconPath));
                button.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnNewRegister;
    private resources.components.PanelShadow ComponentsCountPanel;
    private javax.swing.JPanel ContainerPanel;
    private resources.components.PanelShadow EquipmentCountPanel;
    private resources.components.PanelShadow MaintenanceCountPanel;
    private resources.components.PanelShadow TablePanel;
    private javax.swing.JComboBox<String> jComboBoxLimitPerPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelBtnDeleteRow;
    private javax.swing.JLabel jLabelBtnEdit;
    private javax.swing.JLabel jLabelComponentsCount;
    private javax.swing.JLabel jLabelEquipmentCount;
    private javax.swing.JLabel jLabelMaintenanceCount;
    private javax.swing.JLabel jLabelShowingResults;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JScrollPane jScrollTablePanel;
    private javax.swing.JTable jTableData;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JLabel jlabelTitle1;
    private resources.components.pagination.Pagination pagination;
    // End of variables declaration//GEN-END:variables
}
